/* Aula 03 - Function
01/06/2021*/

// Uma fun√ß√£o √© um bloco de c√≥digo {} que nos permite agrupar funcionalidades, para us√°-las sempre que necess√°rio. 
// Normalmente realiza uma tarefa espec√≠fica e retorna um valor como resultado.

/* Estrutura: 
FUNCTION: Usamos a palavra function para indicar ao JavaScript que vamos declarar uma fun√ß√£o.
NOME: Definimos um nome para referenciarmos nossa fun√ß√£o no momento que queremos invoc√°-la.
PAR√ÇMETROS: Escrevemos os par√™nteses e, dentro deles, colocamos os par√¢metros da fun√ß√£o. Se houver mais de um, os separamos por v√≠rgulas, (a, b).
Se na fun√ß√£o n√£o houver par√¢metros, devemos escrever os par√™nteses sem nada dentro, ().
Dentro de nossa fun√ß√£o, poderemos acessar os par√¢metros como se fossem vari√°veis (a + b), ou seja, ao escrever os nomes dos par√¢metros, podemos trabalhar com eles.
CORPO: Entre as chaves de abertura e de fechamento, escrevemos a l√≥gica de nossa fun√ß√£o, ou seja, o c√≥digo que queremos que seja executado cada vez que a invocamos.
RETORNO: √â muito comum, na hora de escrever uma fun√ß√£o, que queiramos devolver ao exterior o resultado do processo que estamos executando.
Para isso, utilizamos a palavra reservada return seguida do que queremos retornar.

function nome (a, b) {
return a + b;
}
*/

// Declaradas: S√£o aquelas que s√£o declaradas usando a estrutura b√°sica. Podem receber um nome escrito ap√≥s a palavra reservada function, por meio do qual podemos invoc√°-la.

function fazerSorvete(quantidade) {
    return 'üç¶'.repeat(quantidade);
}

// Function expression (express√£o de fun√ß√£o): S√£o aquelas que s√£o atribu√≠das como valor de uma vari√°vel. Neste caso, a fun√ß√£o em si n√£o tem nome, √© uma fun√ß√£o an√¥nima.

let fazerSushi = function (quantidade) {
    return 'üç£'.repeat(quantidade);
}


// Exemplo Daniel Cukier -> fun√ß√µes transformam algo em outra coisa

function transformaAlgo (x) {
    console.log(x); // "efeito colateral"
    return 'gatinho: ' + x;
}

var minhaVariavel = transformaAlgo ('feliz');
var minhaOutraVariavel = transformaAlgo('triste');

console.log(minhaVariavel);
console.log(minhaOutraVariavel);
